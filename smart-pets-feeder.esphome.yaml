substitutions:
  devicename:   Smart Pets Feeder
  devicename_id: pets-feeder
  board_type:    d1_mini
  static_ipaddr: 192.168.0.150

esphome:
  name:  $devicename_id
  on_boot:
    priority: -10
    then:
      - switch.turn_off: engine
      - switch.turn_off: engine_led

esp8266:
  board: $board_type
  restore_from_flash: true

logger:

api:
  encryption:
    key: !secret api_encryption

ota:
  password:    !secret ota_password
  id:          my_ota

wifi:
  networks:
  - ssid:      !secret wifi_ssid
    password:  !secret wifi_password
  - ssid:      !secret wifi2_ssid
    password:  !secret wifi2_password

  manual_ip:
    static_ip: $static_ipaddr
    gateway:   !secret gateway
    subnet:    !secret subnet
    dns1:      !secret dns1

  ap:
    ssid:      $devicename Hotspot
    password:  !secret ap_password

captive_portal:

web_server:
  port: 80

globals:
  - id: skip_next
    type: bool
    restore_value: yes
    initial_value: 'false'

  - id: act_meal
    type: int
    initial_value: '0'

  - id: stop_meal
    type: int
    initial_value: '0'

  - id: time_upd
    type: bool
    initial_value: 'false'

number:
  - platform: template
    name: "Extra Meal - Food quantity"
    id: extra_meal_qty
    icon: "mdi:counter"
    restore_value: true
    optimistic: true
    min_value: 0
    max_value: 10
    step: 1

  - platform: template
    name: "Meal 1 - Food quantity"
    id: meal_1_qty
    icon: "mdi:counter"
    restore_value: true
    optimistic: true
    min_value: 0
    max_value: 10
    step: 1

  - platform: template
    name: "Meal 1 - Schedule: Hour"
    id: meal_1_hour
    icon: "mdi:hours-24"
    restore_value: true
    optimistic: true
    min_value: 0
    max_value: 23
    step: 1

  - platform: template
    name: "Meal 1 - Schedule: Minute"
    id: meal_1_mins
    icon: "mdi:clock-time-one-outline"
    restore_value: true
    optimistic: true
    min_value: 0
    max_value: 59
    step: 1

  - platform: template
    name: "Meal 2 - Food quantity"
    id: meal_2_qty
    icon: "mdi:counter"
    restore_value: true
    optimistic: true
    min_value: 0
    max_value: 10
    step: 1

  - platform: template
    name: "Meal 2 - Schedule: Hour"
    id: meal_2_hour
    icon: "mdi:hours-24"
    restore_value: true
    optimistic: true
    min_value: 0
    max_value: 23
    step: 1

  - platform: template
    name: "Meal 2 - Schedule: Minute"
    id: meal_2_mins
    icon: "mdi:clock-time-one-outline"
    restore_value: true
    optimistic: true
    min_value: 0
    max_value: 59
    step: 1

  - platform: template
    name: "Meal 3 - Food quantity"
    id: meal_3_qty
    icon: "mdi:counter"
    restore_value: true
    optimistic: true
    min_value: 0
    max_value: 10
    step: 1

  - platform: template
    name: "Meal 3 - Schedule: Hour"
    id: meal_3_hour
    icon: "mdi:hours-24"
    restore_value: true
    optimistic: true
    min_value: 0
    max_value: 23
    step: 1

  - platform: template
    name: "Meal 3 - Schedule: Minute"
    id: meal_3_mins
    icon: "mdi:clock-time-one-outline"
    restore_value: true
    optimistic: true
    min_value: 0
    max_value: 59
    step: 1

  - platform: template
    name: "Meal 4 - Food quantity"
    id: meal_4_qty
    icon: "mdi:counter"
    restore_value: true
    optimistic: true
    min_value: 0
    max_value: 10
    step: 1

  - platform: template
    name: "Meal 4 - Schedule: Hour"
    id: meal_4_hour
    icon: "mdi:hours-24"
    restore_value: true
    optimistic: true
    min_value: 0
    max_value: 23
    step: 1

  - platform: template
    name: "Meal 4 - Schedule: Minute"
    id: meal_4_mins
    icon: "mdi:clock-time-one-outline"
    restore_value: true
    optimistic: true
    min_value: 0
    max_value: 59
    step: 1

time:
  - platform: sntp
    timezone: Europe/Rome
    id: local_time
    on_time_sync:
      then:
        - lambda: |-
            char str[17];
            time_t currTime = id(local_time).now().timestamp;
            strftime(str, sizeof(str), "%Y-%m-%d %H:%M", localtime(&currTime));
            id(current_time).publish_state(str);
            id(time_upd) = true;

text_sensor:
  - platform: version
    name: $devicename ESPHome Version

  - platform: wifi_info
    ip_address:
      name: $devicename IP
    ssid:
      name: $devicename SSID
    bssid:
      name: $devicename BSSID

  - platform: template
    name: "Current time"
    id: current_time
    lambda: |-
      if (id(time_upd)) {
        if (id(local_time).now().hour == (int)id(meal_1_hour).state && id(local_time).now().minute == (int)id(meal_1_mins).state) {id(meal1).press();}
        if (id(local_time).now().hour == (int)id(meal_2_hour).state && id(local_time).now().minute == (int)id(meal_2_mins).state) {id(meal2).press();}
        if (id(local_time).now().hour == (int)id(meal_3_hour).state && id(local_time).now().minute == (int)id(meal_3_mins).state) {id(meal3).press();}
        if (id(local_time).now().hour == (int)id(meal_4_hour).state && id(local_time).now().minute == (int)id(meal_4_mins).state) {id(meal4).press();}
      }

      char str[17];
      time_t currTime = id(local_time).now().timestamp;
      strftime(str, sizeof(str), "%Y-%m-%d %H:%M", localtime(&currTime));
      return  { str };
    update_interval: 60s

button:
  - platform: restart
    name: "$devicename Riavvia"

  - platform: template
    name: "Meal 1"
    id: meal1
    internal: true
    on_press:
      - lambda: |-
          if (id(skip_next) == 0 && (int)id(meal_1_qty).state > 0) {
            id(stop_meal) = (int)id(meal_1_qty).state;
            id(engine).turn_on();
          } else {
            id(skip_next) = 0;
          }

  - platform: template
    name: "Meal 2"
    id: meal2
    internal: true
    on_press:
      - lambda: |-
          if (id(skip_next) == 0 && (int)id(meal_2_qty).state > 0) {
            id(stop_meal) = (int)id(meal_2_qty).state;
            id(engine).turn_on();
          } else {
            id(skip_next) = 0;
          }

  - platform: template
    name: "Meal 3"
    id: meal3
    internal: true
    on_press:
      - lambda: |-
          if (id(skip_next) == 0 && (int)id(meal_3_qty).state > 0) {
            id(stop_meal) = (int)id(meal_3_qty).state;
            id(engine).turn_on();
          } else {
            id(skip_next) = 0;
          }

  - platform: template
    name: "Meal 4"
    id: meal4
    internal: true
    on_press:
      - lambda: |-
          if (id(skip_next) == 0 && (int)id(meal_4_qty).state > 0) {
            id(stop_meal) = (int)id(meal_4_qty).state;
            id(engine).turn_on();
          } else {
            id(skip_next) = 0;
          }

switch:
  - platform: template
    name: "Skip next"
    id: skip_next_meal
    icon: "mdi:debug-step-over"
    lambda: |-
      if (id(skip_next) == 1) {
        return true;
      } else {
        return false;
      }
    turn_on_action:
      - lambda: |-
          id(skip_next) = 1;
    turn_off_action:
      - lambda: |-
          id(skip_next) = 0;

#------------------------------------------------------------------------------- Engine
# Connect relay to D1/GPIO5 or change it
  - platform: gpio
    pin: D1
    id: engine
    internal: true
    on_turn_on:
      - switch.turn_on: engine_led
      - delay: 12000ms
      - switch.turn_off: engine
    on_turn_off:
      - switch.turn_off: engine_led
      - lambda: |-
          id(act_meal) = 0;
          id(stop_meal) = 0;

#------------------------------------------------------------------------------- Engine Led
# Connect led to show the working cycle to D7/GPIO13 or change it
  - platform: gpio
    pin: D7
    id: engine_led
    internal: true
    icon: "mdi:led-off"

#------------------------------------------------------------------------------- Extra Meal
# Connect Extra Meal button to D6/GPIO12 or change it
  - platform: gpio
    pin:
      number: D6
      mode:
        input: true
        pullup: true
      inverted: true
    id: "extra_meal"
    name: "Extra Meal"
    on_turn_on:
      - lambda: |-
          if ((int)id(extra_meal_qty).state > 0) {
            id(stop_meal) = (int)id(extra_meal_qty).state;
            id(engine).turn_on();
          }
      - delay: 100ms
      - switch.turn_off: extra_meal

binary_sensor:
  - platform: status
    name: $devicename State

#------------------------------------------------------------------------------- Cycle Counter
# Connect Cycle counter button to D5/GPIO14 or change it
  - platform: gpio
    pin:
      number: D5
      mode:
        input: true
        pullup: true
      inverted: true
    id: "cycle_counter"
    internal: true
    on_press:
      - lambda: |-
          id(act_meal) = id(act_meal)+1;
          if (id(act_meal) == id(stop_meal)) {
            id(engine).turn_off();
            id(engine_led).turn_off();
            id(act_meal) = 0;
          }

sensor:
  - platform: uptime
    name: $devicename Uptime
    id: uptime_sensor

  - platform: wifi_signal
    name: $devicename WiFi Signal
    update_interval: 60s
